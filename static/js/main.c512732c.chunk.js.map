{"version":3,"sources":["App.scss","components/TitleBar.scss","components/Sidebar.scss","components/Table.scss","components/RatingsTable.scss","components/charts/MainInfos.scss","components/Dashboard.scss","constants/mediaTypes.js","util/fileUpload.js","util/getUniqueMediaTypes.js","components/Uploader.js","components/TitleBar.js","components/Table.js","components/RatingsTable.js","components/charts/BarChart.js","components/charts/AverageRatings.js","components/charts/MainInfos.js","components/Dashboard.js","components/charts/RatingsPerWeekday.js","components/charts/RatingsPerYear.js","components/charts/LineColumn.js","components/charts/RatingsPerDecade.js","components/Deviations.js","util/routes.js","components/Time.js","components/Sidebar.js","util/recoverData.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","colorBlack","creamYellow","mediaTypes","name","exportName","separator","uploadFile","_callee","file","csv","regenerator_default","a","wrap","_context","prev","next","readFile","sent","abrupt","csvToJson","stop","Promise","resolve","reject","fileReader","FileReader","onloadend","event","content","target","result","onerror","err","readAsText","rawCsv","lines","replace","changeHeaders","v","cleanData","split","console","log","data","headers","map","line","indexLine","obj","currentline","header","indexHeader","push","pop","review","mediaTypeId","findIndex","mediaType","rating","parseInt","runtime","votes","year","imdbRating","parseFloat","dateRated","Date","dateRatedString","genres","directors","deviation","toFixed","getUniqueMediaTypes","ratings","unique","Object","toConsumableArray","Set","sort","Uploader","_ref","setLoaded","setRatings","setLoadedMediaTypes","upload","_ref2","asyncToGenerator","mark","json","document","getElementById","files","sessionStorage","setItem","JSON","stringify","apply","this","arguments","react_default","createElement","className","type","id","onChange","TitleBar","nextText","style","verticalAlign","previousText","Table","columns","defaultSorted","defaultPageSize","es","pageSizeOptions","minRows","RatingsTable","Header","accessor","Cell","url","row","href","rel","maxWidth","padding","src_components_Table","desc","BarChart","title","categories","dataCount","seriesName","height","width","options","colors","plotOptions","bar","dataLabels","position","distributed","backgroundBarOpacity","offsetY","enabled","formatter","val","Math","round","fontSize","undefined","xaxis","labels","fill","gradient","shade","shadeIntensity","inverseColors","opacityFrom","opacityTo","stops","text","floating","align","color","tooltip","theme","x","show","grid","chart","toolbar","tools","download","series","react_apexcharts_min_default","AverageRatings","ratingsData","ratingsCount","charts_BarChart","KeyValue","description","value","MainInfos","_getAnalyzedData","ratingsSum","reduce","b","average","pubRatingsSum","pubAverage","minutesSum","getAnalyzedData","_getAnalyzedData2","slicedToArray","daysWatched","MainInfos_KeyValue","countOccurences","ratingsArray","counts","Array","i","length","num","weekdays","RatingsPerWeekday","ratingsPerWeekday","weekdayRatings","prevValue","currentValue","getDay","shift","countRatings","RatingsPerYear","ratedYears","getFullYear","uniqueYears","yearsData","years","index","indexOf","LineColumn","columnName","columnData","lineName","lineData","stroke","yaxis","decimalsInFloat","opposite","yearToDecade","floor","RatingsPerDecade","decades","now","arr","getDecades","_analysePerDecades","amountDecades","avgRating","decade","analysePerDecades","_analysePerDecades2","charts_LineColumn","routes","icon","path","component","components_charts_MainInfos","charts_AverageRatings","charts_RatingsPerWeekday","charts_RatingsPerYear","charts_RatingsPerDecade","_splitAndSort","positives","filter","negatives","splitAndSort","_splitAndSort2","float","SidebarElements","_useState5","useState","find","route","lastPath","window","location","pathname","substr","lastIndexOf","_useState6","active","setActive","key","Link","to","concat","process","onClick","Checkbox","checked","Sidebar","loadedMediaTypes","filterMovies","precheckBoxes","typeId","_useState","_useState2","forceUpdate","setForceUpdate","_useState3","Map","_useState4","checkedItems","setCheckedItems","handleCheckboxChange","isChecked","set","Sidebar_SidebarElements","Sidebar_Checkbox","get","sessionRatings","ratingsJSON","getItem","parse","recoverDates","item","_callee2","_context2","recoverData","LoadedApp","_useState7","_useState8","filteredRatings","setFilteredRatings","routeComponents","Component","Route","exact","render","src_components_Sidebar","filterMap","filtered","App","loaded","useEffect","src_components_TitleBar","BrowserRouter","App_LoadedApp","src_components_Uploader","Boolean","hostname","match","ReactDOM","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c512732c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"colorBlack\":\"black\",\"creamYellow\":\"#ffee70\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colorBlack\":\"black\",\"creamYellow\":\"#ffee70\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colorBlack\":\"black\",\"creamYellow\":\"#ffee70\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colorBlack\":\"black\",\"creamYellow\":\"#ffee70\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colorBlack\":\"black\",\"creamYellow\":\"#ffee70\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colorBlack\":\"black\",\"creamYellow\":\"#ffee70\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colorBlack\":\"black\",\"creamYellow\":\"#ffee70\"};","const mediaTypes = [\n  {\n    name: 'Movie',\n    exportName: 'movie',\n  },\n  {\n    name: 'TV Movie',\n    exportName: 'tvMovie',\n  },\n  {\n    name: 'Series',\n    exportName: 'tvSeries',\n  },\n  {\n    name: 'Mini Series',\n    exportName: 'tvMiniSeries',\n  },\n  {\n    name: 'Episode',\n    exportName: 'tvEpisode',\n  },\n  {\n    name: 'Video',\n    exportName: 'video',\n  },\n  {\n    name: 'Short',\n    exportName: 'short',\n  },\n  {\n    name: 'TV Short',\n    exportName: 'tvShort',\n  },\n  {\n    name: 'TV Special',\n    exportName: 'tvSpecial',\n  },\n  {\n    name: 'Video Game',\n    exportName: 'videoGame',\n  },\n];\n\nexport default mediaTypes;\n","import mediaTypes from '../constants/mediaTypes';\n\nconst separator = '***';\n\n/**\n * Upload Process for File\n * @param {Blob} file\n * @return {JSON}\n */\nasync function uploadFile(file) {\n  const csv = await readFile(file);\n  return csvToJson(csv);\n}\n\n/**\n * Read Contents of a File\n * @param {Blob} file\n * @return {String}\n */\nfunction readFile(file) {\n  return new Promise((resolve, reject) => {\n    const fileReader = new FileReader();\n    fileReader.onloadend = event => {\n      const content = event.target.result;\n      resolve(content);\n    };\n\n    fileReader.onerror = err => {\n      reject(err);\n    };\n    fileReader.readAsText(file, 'Windows-1252');\n  });\n}\n\n/**\n * Translate CSV to JSON\n * @param {String} rawCsv\n * @return {JSON}\n */\nfunction csvToJson(rawCsv) {\n  const csv = cleanData(rawCsv);\n\n  const lines = csv.split('\\n');\n  console.log(lines[0]);\n  let result = [];\n  const headers = lines[0].split(separator);\n\n  lines.map((line, indexLine) => {\n    if (indexLine < 1) return result; // Jump header line\n\n    const obj = {};\n    const currentline = line.split(separator);\n\n    headers.map((header, indexHeader) => {\n      obj[header] = currentline[indexHeader];\n      return obj;\n    });\n\n    result.push(obj);\n    return result;\n  });\n\n  result.pop(); // remove the last item because undefined values\n\n  result = convertDatatypes(result);\n\n  console.log(result);\n  return result;\n}\n\n/**\n * Clean CSV Data\n * @param {String} csv\n * @return {String}\n */\nfunction cleanData(csv) {\n  let cleanedCsv;\n  cleanedCsv = changeHeaders(csv);\n  // change all commas in titles to ###\n  cleanedCsv = cleanedCsv.replace(/\"[^\"]+\"/g, v => {\n    return v.replace(/,/g, '###');\n  });\n\n  // change all comma seperators to own separator\n  cleanedCsv = cleanedCsv.replace(/,/g, separator);\n\n  // change back to commas in title\n  cleanedCsv = cleanedCsv.replace(/###/g, ',');\n\n  // remove quotes in titles\n  cleanedCsv = cleanedCsv.replace(/\"/g, '');\n\n  return cleanedCsv;\n}\n\n/**\n * Change Headers of CSV\n * @param {String} csv\n * @return {String}\n */\nfunction changeHeaders(csv) {\n  let cleanedCsv;\n  cleanedCsv = csv.replace('Const,', 'id,');\n  cleanedCsv = cleanedCsv.replace('Your Rating,', 'rating,');\n  cleanedCsv = cleanedCsv.replace('Title,', 'title,');\n  cleanedCsv = cleanedCsv.replace('Date Rated,', 'dateRatedString,');\n  cleanedCsv = cleanedCsv.replace('Genres,', 'genres,');\n  cleanedCsv = cleanedCsv.replace('Title Type,', 'mediaType,');\n  cleanedCsv = cleanedCsv.replace('Num Votes,', 'votes,');\n  cleanedCsv = cleanedCsv.replace('Runtime (mins),', 'runtime,');\n  cleanedCsv = cleanedCsv.replace('Release Date,', 'releaseDate,');\n  cleanedCsv = cleanedCsv.replace('URL,', 'url,');\n  cleanedCsv = cleanedCsv.replace('Year,', 'year,');\n  cleanedCsv = cleanedCsv.replace('IMDb Rating,', 'imdbRating,');\n  cleanedCsv = cleanedCsv.replace(',Directors', ',directors');\n  return cleanedCsv;\n}\n\n/**\n * Covert Strings to corresponding datatypes\n * @param {Array} data\n * @return {Array}\n */\nfunction convertDatatypes(data) {\n  data.map(review => {\n    const mediaTypeId = mediaTypes.findIndex(\n      mediaType => mediaType.exportName === review.mediaType\n    );\n\n    review.rating = parseInt(review.rating);\n    review.runtime = parseInt(review.runtime);\n    review.votes = parseInt(review.votes);\n    review.year = parseInt(review.year);\n    review.imdbRating = parseFloat(review.imdbRating);\n    review.dateRated = new Date(review.dateRatedString);\n    review.mediaTypeId = mediaTypeId;\n    review.mediaType = mediaTypes[mediaTypeId].name;\n    review.genres = review.genres.split(', ');\n    review.directors = review.directors.split(', ');\n    review.deviation = parseFloat(\n      (review.rating - review.imdbRating).toFixed(1)\n    );\n    return review;\n  });\n\n  return data;\n}\n\nexport { uploadFile };\n","/**\n * Check which mediaTypes are present in Uplaoad\n * @param {Array} ratings\n * @return {Array}\n */\nfunction getUniqueMediaTypes(ratings) {\n  let unique = [...new Set(ratings.map(rating => rating.mediaTypeId))];\n  unique = unique.sort();\n  return unique;\n}\n\nexport default getUniqueMediaTypes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { uploadFile } from '../util/fileUpload';\nimport getUniqueMediaTypes from '../util/getUniqueMediaTypes';\nimport './Uploader.scss';\n\nconst Uploader = ({ setLoaded, setRatings, setLoadedMediaTypes }) => {\n  const upload = async () => {\n    const file = document.getElementById('fileUpload').files[0];\n    const json = await uploadFile(file);\n    const mediaTypes = getUniqueMediaTypes(json);\n    console.log(mediaTypes);\n    setRatings(json);\n    setLoadedMediaTypes(mediaTypes);\n    setLoaded(true);\n    sessionStorage.setItem('ratings', JSON.stringify(json));\n    sessionStorage.setItem('mediaTypes', mediaTypes);\n  };\n\n  return (\n    <div className=\"uploader\">\n      <h1>Upload IMDb Ratings CSV</h1>\n      <input type=\"file\" id=\"fileUpload\" onChange={upload} />\n    </div>\n  );\n};\n\nUploader.propTypes = {\n  setLoaded: PropTypes.func,\n  setRatings: PropTypes.func,\n  setLoadedMediaTypes: PropTypes.func,\n};\n\nexport default Uploader;\n","import React from 'react';\nimport './TitleBar.scss';\n\nconst TitleBar = () => {\n  return (\n    <div className=\"title-bar\">\n      <span className=\"app-name\">IMDb Ratings Visualizer</span>\n    </div>\n  );\n};\n\nexport default TitleBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactTable from 'react-table';\nimport './Table.scss';\n\nconst nextText = (\n  <span>\n    <span style={{ verticalAlign: 'middle' }}>Next</span>\n    <i className=\"material-icons pagination-icon\">keyboard_arrow_right</i>\n  </span>\n);\n\nconst previousText = (\n  <span>\n    <i className=\"material-icons pagination-icon left-pagination-icon\">\n      keyboard_arrow_left\n    </i>\n    <span>Previous</span>\n  </span>\n);\n\nconst Table = ({ data, columns, defaultSorted, defaultPageSize }) => {\n  return (\n    <ReactTable\n      data={data}\n      // resolveData={data => data.map(row => row)}\n      columns={columns}\n      className=\"-striped -highlight\"\n      defaultSorted={defaultSorted}\n      defaultPageSize={defaultPageSize}\n      pageSizeOptions={[5, 10, 15, 25, 50, 100, 250, 1000]}\n      nextText={nextText}\n      previousText={previousText}\n      minRows={0}\n    />\n  );\n};\n\nTable.propTypes = {\n  data: PropTypes.array,\n  columns: PropTypes.array,\n  defaultSorted: PropTypes.array,\n  defaultPageSize: PropTypes.number,\n};\n\nexport default Table;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Table from './Table';\nimport { Link } from 'react-router-dom';\nimport './RatingsTable.scss';\n\nconst getLink = url => {\n  return (\n    <a\n      href={url}\n      target=\"_blank\"\n      className=\"material-icons imdb-link\"\n      rel=\"noreferrer noopener\"\n    >\n      open_in_new\n    </a>\n  );\n};\n\nconst RatingsTable = ({ ratings }) => {\n  const columns = [\n    {\n      Header: '',\n      accessor: 'url',\n      Cell: ({ row }) => getLink(row.url),\n      maxWidth: 64,\n      className: 'cell-center',\n    },\n    {\n      Header: 'Title',\n      accessor: 'title',\n    },\n    {\n      Header: 'Rating',\n      accessor: 'rating',\n      maxWidth: 150,\n      className: 'cell-center',\n    },\n    {\n      Header: 'Type',\n      accessor: 'mediaType',\n      maxWidth: 150,\n      className: 'cell-center',\n    },\n    {\n      Header: 'Rated',\n      accessor: 'dateRatedString',\n      maxWidth: 150,\n      className: 'cell-center',\n    },\n    {\n      Header: 'Year',\n      accessor: 'year',\n      maxWidth: 150,\n      className: 'cell-center',\n    },\n  ];\n\n  const defaultSorted = [\n    {\n      id: 'rating',\n      desc: true,\n    },\n  ];\n\n  return (\n    <div className=\"main-component\" style={{ padding: 40 }}>\n      <Table\n        data={ratings}\n        columns={columns}\n        defaultSorted={defaultSorted}\n        defaultPageSize={50}\n      />\n    </div>\n  );\n};\n\nRatingsTable.propTypes = {\n  ratings: PropTypes.array,\n};\n\nconst imdbLink = ({ url }) => {\n  return <Link to={url}>Test</Link>;\n};\n\nimdbLink.propTypes = {\n  url: PropTypes.string,\n};\n\nexport default RatingsTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactApexCharts from 'react-apexcharts';\n\nconst BarChart = ({\n  title,\n  categories,\n  data,\n  dataCount,\n  seriesName,\n  height,\n  width,\n}) => {\n  const options = {\n    colors: ['#FFEE70'],\n    plotOptions: {\n      bar: {\n        dataLabels: {\n          position: 'top',\n        },\n        distributed: true,\n        colors: {\n          backgroundBarOpacity: 1,\n        },\n      },\n    },\n    dataLabels: {\n      offsetY: -22,\n      enabled: true,\n      formatter: val => {\n        return Math.round((val / dataCount) * 100) + '%';\n      },\n      style: {\n        fontSize: '12px',\n        colors: undefined,\n      },\n    },\n    xaxis: {\n      categories,\n      labels: {},\n    },\n    fill: {\n      type: 'gradient',\n      gradient: {\n        shade: 'light',\n        type: 'vertical',\n        shadeIntensity: 0.4,\n        inverseColors: false,\n        opacityFrom: 1,\n        opacityTo: 1,\n        stops: [50, 100],\n      },\n    },\n    title: {\n      text: title,\n      floating: true,\n      align: 'center',\n      style: {\n        color: '#ffffff',\n      },\n    },\n    tooltip: {\n      theme: 'dark',\n      x: {\n        show: false,\n      },\n    },\n    grid: {\n      show: false,\n    },\n    chart: {\n      toolbar: {\n        tools: {\n          download: false,\n        },\n      },\n    },\n  };\n\n  const series = [\n    {\n      name: seriesName,\n      data: data,\n    },\n  ];\n\n  return (\n    <div className=\"chart-container\">\n      <ReactApexCharts\n        options={options}\n        series={series}\n        type=\"bar\"\n        height={height}\n        width={width}\n      />\n    </div>\n  );\n};\n\nBarChart.propTypes = {\n  title: PropTypes.string,\n  categories: PropTypes.array,\n  data: PropTypes.array,\n  dataCount: PropTypes.number,\n  seriesName: PropTypes.string,\n  height: PropTypes.number,\n  width: PropTypes.number,\n};\n\nexport default BarChart;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport BarChart from './BarChart';\n\nconst AverageRatings = ({ ratingsData, ratingsCount }) => {\n  const categories = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'];\n\n  return (\n    <BarChart\n      title=\"Ratings per Stars\"\n      categories={categories}\n      data={ratingsData}\n      dataCount={ratingsCount}\n      seriesName=\"Ratings\"\n      height={350}\n      width={600}\n    />\n  );\n};\n\nAverageRatings.propTypes = {\n  ratingsData: PropTypes.array,\n  ratingsCount: PropTypes.number,\n};\n\nexport default AverageRatings;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MainInfos.scss';\n\n/**\n * Get average, public average and days watched\n * @param {Array} ratings\n * @param {Number} ratingsCount\n * @return {Array} average, puAverage, daysWatched\n */\nfunction getAnalyzedData(ratings, ratingsCount) {\n  const ratingsSum = ratings.reduce((a, b) => a + (b.rating || 0), 0);\n  const average = parseFloat((ratingsSum / ratingsCount).toFixed(1));\n  const pubRatingsSum = ratings.reduce((a, b) => a + (b.imdbRating || 0), 0);\n  const pubAverage = parseFloat((pubRatingsSum / ratingsCount).toFixed(1));\n  const minutesSum = ratings.reduce((a, b) => a + (b.runtime || 0), 0);\n  const daysWatched = parseFloat((minutesSum / 60 / 24).toFixed(1));\n\n  return [average, pubAverage, daysWatched];\n}\n\nconst MainInfos = ({ ratings, ratingsCount }) => {\n  const [average, pubAverage, daysWatched] = getAnalyzedData(\n    ratings,\n    ratingsCount\n  );\n\n  return (\n    <div className=\"chart-container\">\n      <table>\n        <tbody>\n          <KeyValue description=\"ratings\" value={ratingsCount} />\n          <KeyValue description=\"your avg rating\" value={average} />\n          <KeyValue description=\"public avg rating\" value={pubAverage} />\n          <KeyValue description=\"days watched\" value={daysWatched} />\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nMainInfos.propTypes = {\n  ratings: PropTypes.array,\n  ratingsCount: PropTypes.number,\n};\n\nconst KeyValue = ({ description, value }) => {\n  return (\n    <tr>\n      <td className=\"info-value\">{value}</td>\n      <td className=\"info-key\">{description}</td>\n    </tr>\n  );\n};\n\nKeyValue.propTypes = {\n  description: PropTypes.string,\n  value: PropTypes.number,\n};\n\nexport default MainInfos;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AverageRatings from './charts/AverageRatings';\nimport MainInfos from './charts/MainInfos';\nimport './Dashboard.scss';\n\nconst countOccurences = ratings => {\n  const ratingsArray = ratings.map(rating => rating.rating);\n  const counts = Array(10).fill(0);\n\n  for (let i = 0; i < ratingsArray.length; i++) {\n    const num = ratingsArray[i] - 1;\n    counts[num] = counts[num] ? counts[num] + 1 : 1;\n  }\n\n  return counts;\n};\n\nconst Dashboard = ({ ratings }) => {\n  const ratingsCount = ratings.length;\n\n  return (\n    <div className=\"main-component\">\n      <MainInfos ratings={ratings} ratingsCount={ratingsCount} />\n      <AverageRatings\n        ratingsData={countOccurences(ratings)}\n        ratingsCount={ratingsCount}\n      />\n    </div>\n  );\n};\n\nDashboard.propTypes = {\n  ratings: PropTypes.array,\n};\n\nexport default Dashboard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport BarChart from './BarChart';\n\nconst weekdays = [\n  'Monday',\n  'Tuesday',\n  'Wednesday',\n  'Thursday',\n  'Friday',\n  'Saturday',\n  'Sunday',\n];\n\n/**\n * Count Ratings per Weekday\n * @param {Array} ratings\n * @return {Array}\n */\nfunction countRatings(ratings) {\n  const counts = [0, 0, 0, 0, 0, 0, 0];\n\n  const weekdayRatings = ratings.reduce((prevValue, currentValue) => {\n    const weekday = currentValue.dateRated.getDay();\n    prevValue[weekday]++;\n    return prevValue;\n  }, counts);\n\n  // move Sunday to the end\n  weekdayRatings.push(weekdayRatings.shift());\n  return weekdayRatings;\n}\n\nconst RatingsPerWeekday = ({ ratings }) => {\n  const ratingsCount = ratings.length;\n  const ratingsPerWeekday = countRatings(ratings);\n  console.log('ratingsPerWeekday =>', ratingsPerWeekday);\n\n  return (\n    <div>\n      <BarChart\n        title=\"Ratings per Weekday\"\n        categories={weekdays}\n        data={ratingsPerWeekday}\n        dataCount={ratingsCount}\n        seriesName=\"Weekday\"\n        width={600}\n        height={350}\n      />\n    </div>\n  );\n};\n\nRatingsPerWeekday.propTypes = {\n  ratings: PropTypes.array,\n};\n\nexport default RatingsPerWeekday;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport BarChart from './BarChart';\n\nconst countOccurences = (ratings, years) => {\n  const ratingsArray = ratings.map(rating => rating.dateRated.getFullYear());\n  const counts = Array(years).fill(0);\n\n  for (let i = 0; i < ratingsArray.length; i++) {\n    const year = ratingsArray[i];\n    const index = years.indexOf(year);\n    counts[index] = counts[index] ? counts[index] + 1 : 1;\n  }\n\n  return counts;\n};\n\n/**\n * Returns years in which the user rated\n * @param {Array} ratings\n * @return {Array}\n */\nfunction uniqueYears(ratings) {\n  const unique = [\n    ...new Set(ratings.map(rating => rating.dateRated.getFullYear())),\n  ];\n  unique.sort();\n  return unique;\n}\n\nconst RatingsPerYear = ({ ratings }) => {\n  const ratingsCount = ratings.length;\n  const ratedYears = uniqueYears(ratings);\n  const yearsData = countOccurences(ratings, ratedYears);\n\n  return (\n    <BarChart\n      title=\"Ratings per Year\"\n      categories={ratedYears}\n      data={yearsData}\n      dataCount={ratingsCount}\n      seriesName=\"Year\"\n      width={600}\n      height={350}\n    />\n  );\n};\n\nRatingsPerYear.propTypes = {\n  ratings: PropTypes.array,\n};\n\nexport default RatingsPerYear;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactApexCharts from 'react-apexcharts';\n\nconst LineColumn = ({\n  title,\n  categories,\n  columnName,\n  columnData,\n  lineName,\n  lineData,\n  height,\n  width,\n}) => {\n  const options = {\n    stroke: {\n      width: [0, 4],\n    },\n    title: {\n      text: title,\n      floating: true,\n      align: 'center',\n      style: {\n        color: '#ffffff',\n      },\n    },\n    labels: categories,\n    yaxis: [\n      {\n        title: {\n          text: columnName,\n        },\n        decimalsInFloat: 0,\n      },\n      {\n        opposite: true,\n        title: {\n          text: lineName,\n        },\n        decimalsInFloat: 1,\n      },\n    ],\n    grid: {\n      yaxis: {\n        lines: {\n          show: false,\n        },\n      },\n    },\n    chart: {\n      toolbar: {\n        tools: {\n          download: false,\n        },\n      },\n    },\n    tooltip: {\n      theme: 'dark',\n    },\n  };\n\n  const series = [\n    {\n      name: columnName,\n      type: 'column',\n      data: columnData,\n    },\n    {\n      name: lineName,\n      type: 'line',\n      data: lineData,\n    },\n  ];\n\n  return (\n    <div className=\"chart-container\">\n      <ReactApexCharts\n        series={series}\n        options={options}\n        type=\"line\"\n        height={height}\n        width={width}\n      />\n    </div>\n  );\n};\n\nLineColumn.propTypes = {\n  title: PropTypes.string,\n  categories: PropTypes.array,\n  columnName: PropTypes.string,\n  columnData: PropTypes.array,\n  lineName: PropTypes.string,\n  lineData: PropTypes.array,\n  height: PropTypes.number,\n  width: PropTypes.number,\n};\n\nexport default LineColumn;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport LineColumn from './LineColumn';\n\n/**\n * Convert a year to it's decade\n * @param {Number} year\n * @return {Number}\n */\nfunction yearToDecade(year) {\n  return Math.floor(year / 10) * 10;\n}\n\n/**\n * returns decades for x-axis\n * @return {Array}\n */\nfunction getDecades() {\n  // earliest movie on imdb is from 1874 https://www.imdb.com/title/tt3155794/?ref_=ttls_li_tt\n  const firstDecade = 1870;\n  const now = new Date();\n  const arr = [];\n\n  for (let i = firstDecade; i <= yearToDecade(now.getFullYear()); i += 10) {\n    arr.push(i);\n  }\n\n  return arr;\n}\n\n/**\n * Returns amount of Ratings and avg rating per decade\n * @param {Array} ratings\n * @param {Array} decades\n * @return {Array}\n */\nfunction analysePerDecades(ratings, decades) {\n  const amountDecades = decades.length;\n  const counts = Array(amountDecades).fill(0);\n  const avgRating = Array(amountDecades).fill(0);\n\n  for (let i = 0; i < ratings.length; i++) {\n    const rating = ratings[i].rating;\n    const decade = yearToDecade(ratings[i].year);\n    const index = decades.indexOf(decade);\n    counts[index] = counts[index] + 1;\n    avgRating[index] = avgRating[index] + rating;\n  }\n\n  for (let i = 0; i < avgRating.length; i++) {\n    avgRating[i] = avgRating[i]\n      ? parseFloat((avgRating[i] / counts[i]).toFixed(1))\n      : 0;\n  }\n\n  console.log('counts =>', counts);\n  console.log('avgRating =>', avgRating);\n\n  return [counts, avgRating];\n}\n\nconst RatingsPerDecade = ({ ratings }) => {\n  const decades = getDecades();\n  console.log('decades =>', decades);\n  const [counts, avgRating] = analysePerDecades(ratings, decades);\n\n  return (\n    <div>\n      <LineColumn\n        title=\"Ratings per Decade\"\n        categories={decades}\n        columnName=\"Amount of Ratings\"\n        columnData={counts}\n        lineName=\"Average Rating\"\n        lineData={avgRating}\n        width={1200}\n        height={378}\n      />\n    </div>\n  );\n};\n\nRatingsPerDecade.propTypes = {\n  ratings: PropTypes.array,\n};\n\nexport default RatingsPerDecade;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Table from './Table';\n\n/**\n * Splits deviations to negatives and positives and sorts them\n * @param {Array} ratings\n * @return {Array} positives and negatives\n */\nfunction splitAndSort(ratings) {\n  const positives = ratings.filter(rating => {\n    return rating.deviation > 0;\n  });\n\n  const negatives = ratings.filter(rating => {\n    return rating.deviation < 0;\n  });\n\n  // sort highest deviation first\n  positives.sort((a, b) => b.deviation - a.deviation);\n  negatives.sort((a, b) => a.deviation - b.deviation);\n\n  return [positives, negatives];\n}\n\nconst Deviation = ({ ratings }) => {\n  const [positives, negatives] = splitAndSort(ratings);\n  console.log('positives =>', positives);\n  console.log('negatives =>', negatives);\n\n  const columns = [\n    {\n      Header: 'Title',\n      accessor: 'title',\n    },\n    {\n      Header: 'Your Rating',\n      accessor: 'rating',\n    },\n    {\n      Header: 'IMDb Rating',\n      accessor: 'imdbRating',\n    },\n    {\n      Header: 'Deviation',\n      accessor: 'deviation',\n    },\n  ];\n\n  return (\n    <div className=\"main-component\">\n      <div style={{ float: 'left', width: '45%' }}>\n        <h3>Positive</h3>\n        <Table data={positives} columns={columns} defaultPageSize={15} />\n      </div>\n      <div style={{ float: 'right', width: '45%' }}>\n        <h3>Negative</h3>\n        <Table data={negatives} columns={columns} defaultPageSize={15} />\n      </div>\n    </div>\n  );\n};\n\nDeviation.propTypes = {\n  ratings: PropTypes.array,\n};\n\nexport default Deviation;\n","import RatingsTable from '../components/RatingsTable';\nimport Dashboard from '../components/Dashboard';\nimport Time from '../components/Time';\nimport Deviations from '../components/Deviations';\n\nconst routes = [\n  {\n    name: 'Dashboard',\n    icon: 'bubble_chart',\n    path: '/',\n    component: Dashboard,\n  },\n  {\n    name: 'Ratings',\n    icon: 'list',\n    path: '/ratings',\n    component: RatingsTable,\n  },\n  {\n    name: 'Time',\n    icon: 'calendar_today',\n    path: '/time',\n    component: Time,\n  },\n  {\n    name: 'Deviations',\n    icon: 'call_split',\n    path: '/deviations',\n    component: Deviations,\n  },\n];\n\nexport default routes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport RatingsPerWeekday from './charts/RatingsPerWeekday';\nimport RatingsPerYear from './charts/RatingsPerYear';\nimport RatingssPerDecade from './charts/RatingsPerDecade';\n\nconst Time = ({ ratings }) => {\n  return (\n    <div className=\"main-component\">\n      <RatingsPerWeekday ratings={ratings} />\n      <RatingsPerYear ratings={ratings} />\n      <RatingssPerDecade ratings={ratings} />\n    </div>\n  );\n};\n\nTime.propTypes = {\n  ratings: PropTypes.array,\n};\n\nexport default Time;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './Sidebar.scss';\nimport { Link } from 'react-router-dom';\nimport routes from '../util/routes';\nimport mediaTypes from '../constants/mediaTypes';\n\n/**\n * returns active route name\n * @param {Array} routes\n * @return {String}\n */\nconst getActiveRoute = routes => {\n  console.log(routes);\n\n  const currentRoute = routes.find(route => {\n    const lastPath = window.location.pathname.substr(\n      window.location.pathname.lastIndexOf('/')\n    );\n\n    return route.path === lastPath;\n  });\n\n  return currentRoute.name;\n};\n\nconst Sidebar = ({ loadedMediaTypes, filterMovies }) => {\n  const precheckBoxes = loadedMediaTypes.map(typeId => {\n    return [typeId, true];\n  });\n  const [forceUpdate, setForceUpdate] = useState(1);\n  const [checkedItems, setCheckedItems] = useState(new Map(precheckBoxes));\n\n  const handleCheckboxChange = event => {\n    const id = parseInt(event.target.value);\n    const isChecked = event.target.checked;\n    setCheckedItems(checkedItems.set(id, isChecked));\n    setForceUpdate(forceUpdate + 1);\n    filterMovies(checkedItems);\n  };\n\n  return (\n    <div className=\"sidebar\">\n      <SidebarElements />\n      <div>\n        <h3 className=\"filter-heading\">Filter</h3>\n        {checkedItems\n          ? loadedMediaTypes.map(typeId => {\n              return (\n                <Checkbox\n                  key={typeId}\n                  id={typeId}\n                  name={mediaTypes[typeId].name}\n                  checked={checkedItems.get(typeId)}\n                  onChange={handleCheckboxChange}\n                />\n              );\n            })\n          : 'loading'}\n      </div>\n    </div>\n  );\n};\n\nSidebar.propTypes = {\n  loadedMediaTypes: PropTypes.array,\n  filterMovies: PropTypes.func,\n};\n\nconst SidebarElements = () => {\n  const [active, setActive] = useState(getActiveRoute(routes));\n\n  const isActive = name => {\n    return active === name;\n  };\n\n  return routes ? (\n    <div>\n      {routes.map(route => {\n        return (\n          <div key={route.name}>\n            <Link\n              to={`${process.env.PUBLIC_URL}${route.path}`}\n              className=\"sidebar-link\"\n            >\n              <div className={isActive(route.name) ? 'active-tab' : ''}>\n                <div\n                  onClick={() => setActive(route.name)}\n                  className=\"sidebar-box\"\n                >\n                  <i className=\"material-icons sidebar-icon\">{route.icon}</i>\n                  <span className=\"sidebar-text\">{route.name}</span>\n                </div>\n              </div>\n            </Link>\n          </div>\n        );\n      })}\n    </div>\n  ) : (\n    'Loading'\n  );\n};\n\nconst Checkbox = ({ id, name, checked, onChange }) => {\n  return (\n    <label className=\"filter-checkbox-label\">\n      <input\n        type=\"checkbox\"\n        className=\"custom-checkbox\"\n        value={id}\n        name={name}\n        checked={checked}\n        onChange={onChange}\n      />\n      <span className=\"checkmark\" />\n      {name}\n    </label>\n  );\n};\n\nCheckbox.propTypes = {\n  id: PropTypes.number,\n  name: PropTypes.string,\n  checked: PropTypes.bool,\n  onChange: PropTypes.func,\n};\n\nexport default Sidebar;\n","/**\n * Load data from session storage to component state\n * @param {Function} setRatings\n * @param {Function} setLoadedMediaTypes\n * @param {Function} setLoaded\n */\nasync function recoverData(setRatings, setLoadedMediaTypes, setLoaded) {\n  const sessionRatings = sessionStorage.getItem('ratings');\n\n  // load data from session storage\n  if (sessionRatings) {\n    const ratingsJSON = await JSON.parse(sessionRatings);\n    const ratings = await recoverDates(ratingsJSON);\n    setRatings(ratings);\n    console.log(ratings);\n    setLoadedMediaTypes(\n      sessionStorage\n        .getItem('mediaTypes')\n        .split(',')\n        .map(item => parseInt(item))\n    );\n    setLoaded(true);\n  }\n}\n\n/**\n * Convert Date Strings to Javascript Dates\n * @param {Array} ratings\n * @return {Array}\n */\nasync function recoverDates(ratings) {\n  return ratings.map(rating => {\n    rating.dateRated = new Date(rating.dateRated);\n    return rating;\n  });\n}\n\nexport default recoverData;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport './App.scss';\nimport Uploader from './components/Uploader';\nimport TitleBar from './components/TitleBar';\nimport Sidebar from './components/Sidebar';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport routes from './util/routes';\nimport recoverData from './util/recoverData';\n\nconst App = () => {\n  const [loaded, setLoaded] = useState(false);\n  const [ratings, setRatings] = useState();\n  const [loadedMediaTypes, setLoadedMediaTypes] = useState();\n\n  useEffect(() => {\n    if (!loaded) {\n      recoverData(setRatings, setLoadedMediaTypes, setLoaded);\n    }\n  }, [loaded]);\n\n  return (\n    <div className=\"App\">\n      <TitleBar />\n      <div className=\"main-content\">\n        {loaded ? (\n          <Router>\n            <LoadedApp ratings={ratings} loadedMediaTypes={loadedMediaTypes} />\n          </Router>\n        ) : (\n          <Uploader\n            setLoaded={setLoaded}\n            setRatings={setRatings}\n            setLoadedMediaTypes={setLoadedMediaTypes}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst LoadedApp = ({ ratings, loadedMediaTypes }) => {\n  const [filteredRatings, setFilteredRatings] = useState(ratings);\n\n  const filterMovies = filterMap => {\n    const filtered = ratings.filter(\n      rating => filterMap.get(rating.mediaTypeId) === true\n    );\n\n    setFilteredRatings(filtered);\n  };\n\n  const routeComponents = routes.map(({ path, component: Component, name }) => {\n    return (\n      <Route\n        exact\n        path={`${process.env.PUBLIC_URL}${path}`}\n        render={() => <Component ratings={filteredRatings} />}\n        key={name}\n      />\n    );\n  });\n\n  return (\n    <div>\n      <Sidebar\n        loadedMediaTypes={loadedMediaTypes}\n        filterMovies={filterMovies}\n      />\n      {routeComponents}\n      {/* <RatingsTable ratings={ratings} /> */}\n    </div>\n  );\n};\n\nLoadedApp.propTypes = {\n  ratings: PropTypes.array,\n  loadedMediaTypes: PropTypes.array,\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\n/**\n * Registers a Service Worker\n * @param {Object} config\n */\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\n/**\n * Register a Valid Service Worker\n * @param {String} swUrl\n * @param {Object} config\n */\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\n/**\n * Check a valid Service Worker\n * @param {String} swUrl\n * @param {Object} config\n */\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\n/**\n * Unregister Service worker\n */\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}